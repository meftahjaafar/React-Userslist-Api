{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\hoc-users-list\\\\src\\\\components\\\\User\\\\Users.js\";\nimport React, { Component } from \"react\";\nimport { getUsers } from \"../../services/UserService\";\nimport Search from \"../Utils/Search\";\nimport UserList from \"./UserList\";\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      getUsers().then(users => {\n        this.users = users;\n        this.setState({\n          userSearch: users\n        });\n      });\n    };\n\n    this.search = e => {\n      const search = e.target.value;\n      let userSearch = this.users;\n\n      if (search !== \"\") {\n        userSearch = this.users.filter(user => user.name.includes(search));\n      }\n\n      this.setState({\n        userSearch: userSearch,\n        search: search\n      });\n    };\n\n    this.render = () => {\n      return React.createElement(React.Fragment, null, React.createElement(Search, {\n        handleChange: this.search,\n        searchTerm: this.state.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(UserList, {\n        users: this.state.userSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })));\n    };\n\n    this.state = {\n      userSearch: [],\n      search: \"\"\n    };\n    this.users = [];\n  }\n\n}\n\nexport default Users;","map":{"version":3,"sources":["C:\\Users\\pc\\hoc-users-list\\src\\components\\User\\Users.js"],"names":["React","Component","getUsers","Search","UserList","Users","constructor","props","componentDidMount","then","users","setState","userSearch","search","e","target","value","filter","user","name","includes","render","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC5BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,iBATmB,GASC,MAAM;AACxBN,MAAAA,QAAQ,GAAGO,IAAX,CAAgBC,KAAK,IAAI;AACvB,aAAKA,KAAL,GAAaA,KAAb;AACA,aAAKC,QAAL,CAAc;AACZC,UAAAA,UAAU,EAAEF;AADA,SAAd;AAGD,OALD;AAMD,KAhBkB;;AAAA,SAkBnBG,MAlBmB,GAkBVC,CAAC,IAAI;AACZ,YAAMD,MAAM,GAAGC,CAAC,CAACC,MAAF,CAASC,KAAxB;AACA,UAAIJ,UAAU,GAAG,KAAKF,KAAtB;;AAEA,UAAIG,MAAM,KAAK,EAAf,EAAmB;AACjBD,QAAAA,UAAU,GAAG,KAAKF,KAAL,CAAWO,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmBP,MAAnB,CAA1B,CAAb;AACD;;AAED,WAAKF,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAEA,UADA;AAEZC,QAAAA,MAAM,EAAEA;AAFI,OAAd;AAID,KA9BkB;;AAAA,SAgCnBQ,MAhCmB,GAgCV,MAAM;AACb,aACE,0CACE,oBAAC,MAAD;AAAQ,QAAA,YAAY,EAAE,KAAKR,MAA3B;AAAmC,QAAA,UAAU,EAAE,KAAKS,KAAL,CAAWT,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKS,KAAL,CAAWV,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CADF;AAQD,KAzCkB;;AAEjB,SAAKU,KAAL,GAAa;AACXV,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAIA,SAAKH,KAAL,GAAa,EAAb;AACD;;AAR2B;;AA6C9B,eAAeL,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getUsers } from \"../../services/UserService\";\r\nimport Search from \"../Utils/Search\";\r\nimport UserList from \"./UserList\";\r\n\r\nclass Users extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userSearch: [],\r\n      search: \"\"\r\n    };\r\n    this.users = [];\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    getUsers().then(users => {\r\n      this.users = users;\r\n      this.setState({\r\n        userSearch: users\r\n      });\r\n    });\r\n  };\r\n\r\n  search = e => {\r\n    const search = e.target.value;\r\n    let userSearch = this.users;\r\n\r\n    if (search !== \"\") {\r\n      userSearch = this.users.filter(user => user.name.includes(search));\r\n    }\r\n\r\n    this.setState({\r\n      userSearch: userSearch,\r\n      search: search\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <>\r\n        <Search handleChange={this.search} searchTerm={this.state.search} />\r\n        <div className=\"row mt-2\">\r\n          <UserList users={this.state.userSearch} />\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Users;"]},"metadata":{},"sourceType":"module"}